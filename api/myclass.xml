
    <class name = "myclass" >
        My Feature-Rich Class
        
        <include filename = "../license.xml" />
        
        <constant name = "default port" value = "8080">registered with IANA</constant>
        
        <!-- Note: If no <constructor> is declared, an implicit one is created. -->
        <constructor>
            Create a new myclass with the given name.
            <argument name = "name" type = "string" />
        </constructor>
        
        <!-- Note: If no <destructor> is declared, an implicit one is created.
            </destructor> -->
        
        <method name = "has feature">
            Return true if the myclass has the given feature.
            <argument name = "feature" type = "string" />
            <return type = "boolean" />
        </method>
        
        <method name = "sleep">
            Put the myclass to sleep for the given number of milliseconds.
            No messages will be processed by the actor during this time.
            <argument name = "duration" type = "integer" />
        </method>
        
        <!-- Note: callback typedefs can be declared like methods -->
        <callback_type name = "handler_fn">
            <argument name = "self" type = "myclass" />
            <argument name = "action" type = "string" />
            <return type = "boolean" />
        </callback_type>
        
        <!-- Note: callback types can be used as method arguments -->
        <method name = "add handler">
            Store the given callback function for later
            <argument name = "handler" type = "myclass_handler_fn" callback = "1" />
        </method>
        
        <!-- Note: If singleton = "1", no class struct pointer is required. -->
        <method name = "test" singleton = "1">
            Self test of this class
            <argument name = "verbose" type = "boolean" />
        </method>
        
        <!-- Note: See zproject_class_api.gsl for all the type strings that
            are supported for arguments and return values in C headers.
            Not all of these are supported in all language bindings;
            see each language binding's file for supported types in that
            language, and add more types as needed where appropriate. -->
    </class>
