.template 0
#  ===========================================================================
#  Resolve standard CLASS projects
#
#  ===========================================================================

function depends_on (dependent, name)
    if count (project.use, use.project = my.name) = 0
        new use to project as child before my.dependent
            child.project = my.name
            child.implied = 1
            return child
        endnew
    endif
endfunction

function resolve_dependency (use)
    if my.use.project ?= "zyre"
        my.use.repository ?= "https://github.com/zeromq/zyre"
        my.use.test ?= "zyre_test"
        resolve_dependency (depends_on (my.use, "czmq"))
    elsif my.use.project ?= "czmq"
        my.use.repository ?= "https://github.com/zeromq/czmq"
        my.use.test ?= "zctx_test"
        resolve_dependency (depends_on (my.use, "zmq"))
    elsif my.use.project ?= "zmq"
        my.use.repository ?= "https://github.com/zeromq/libzmq"
        my.use.test ?= "zmq_init"
    else
        if (!defined (my.use.repository) | \
            !defined (my.use.test))
            echo "Unknown project for <use project = \"$(my.use.project)\"/>"
        endif
    endif
endfunction

for use
    resolve_dependency (use)
endfor

.endtemplate
