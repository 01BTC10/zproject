#   Generate debian recipes for project
#
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/imatix/gsl for details.
#
#   Copyright (c) the Contributors as noted in the AUTHORS file.
#   This file is part of zproject.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.

register_target ("debian", "packaging for Debian")

.macro target_debian
.directory.create ('packaging/debian')
.output "packaging/debian/compat"
9
.output "packaging/debian/control"
#
#    $(project.name) - $(project.description?'':)
#
.   for project.license
#    $(string.trim (license.):block                                         )
.   endfor

Source:         $(string.replace (project.name, "_|-"))
Section:        net
Priority:       optional
Maintainer:     John Doe <John.Doe@example.com>
Uploaders:      John Doe <John.Doe@example.com>
Standards-Version: 3.9.7
Build-Depends: debhelper (>= 8),
    pkg-config,
    dh-autoreconf,
.for project.use
.if use.project = "libzmq"
    libzmq4-dev,
.elsif defined(use.debian_name)
    $(use.debian_name),
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.else
    lib$(string.replace (use.libname, "_|-"))-dev,
.endif
.endfor
    dh-autoreconf,
    systemd

.if project.exports_classes
Package: $(string.replace (project.libname, "_|-"))$(project->version.major)
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: $(project.name)
 This package contains shared library for $(project.name): $(project.description)

Package: $(string.replace (project.name, "_|-"))-dev
Architecture: all
Section: libdevel
Depends:
.for project.use
.if use.project = "libzmq"
    libzmq4-dev,
.elsif defined(use.debian_name)
    $(use.debian_name),
.elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.else
    lib$(string.replace (use.libname, "_|-"))-dev,
.endif
.endfor
    $(string.replace (project.libname, "_|-"))$(project->version.major) (= ${binary:Version})
Description: development files for $(project.name)
 This package contains development files for $(project.name): $(project.description)
.endif

.if project.has_main
Package: $(string.replace (project.name, "_|"))
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}
Description: $(project.description)
 Main package for $(project.name): $(project.description)
.endif

Package: $(project.name)-dbg
Architecture: any
Section: debug
Priority: extra
Depends:
.if project.has_main
    $(string.replace (project.name, "_|-")) (= ${binary:Version}),
.else
    $(string.replace (project.libname, "_|-"))$(project->version.major) (= ${binary:Version}),
.endif
    ${misc:Depends}
Description: debugging symbols for $(project.name)
 This package contains the debugging symbols for $(project.name) : $(project.description).

.output "packaging/debian/$(project.name).dsc"
Format:         1.0
Source:         $(string.replace (project.name, "_|-"))
Version:        $(project->version.major).$(project->version.minor).$(project->version.patch)-1
.if project.exports_classes
Binary:         $(string.replace (project.libname, "_|-"))$(project->version.major), $(string.replace (project.name, "_|-"))-dev
.endif
Architecture:   any all
Maintainer:     John Doe <John.Doe@example.com>
Standards-Version: 3.9.5
Build-Depends: bison, debhelper (>= 8),
    pkg-config,
    automake,
    autoconf,
    libtool,
.for project.use
.   if use.project = "libzmq"
    libzmq4-dev,
.   elsif defined(use.debian_name)
    $(use.debian_name),
.   elsif regexp.match("^lib", use.libname)
    $(string.replace (use.libname, "_|-"))-dev,
.   else
    lib$(string.replace (use.libname, "_|-"))-dev,
.   endif
.endfor
    dh-autoreconf

.if project.exports_classes
Package-List:
 $(string.replace (project.libname, "_|-"))$(project->version.major) deb net optional arch=any
 $(string.replace (project.name, "_|-"))-dev deb libdevel optional arch=any
.endif

.output "packaging/debian/rules"
#!/usr/bin/make -f
# -*- makefile -*-

override_dh_strip:
	dh_strip --dbg-package=$(project.name)-dbg

override_dh_auto_test:
	echo "Skipped for now"

override_dh_auto_configure:
	dh_auto_configure -- --with-systemd

%:
	dh $@ --with=autoreconf

\.PHONY: override_dh_strip override_dh_auto_test override_dh_auto_configure

.if project.has_main
.   output ("packaging/debian/$(string.replace (project.name, "_|-")).install")
.# generate binary names
.   for project.main where scope = "public"
debian/tmp/usr/bin/$(main.name)
.       if file.exists ("src/$(main.name).cfg.example")
debian/tmp/etc/$(project.name)/$(main.name).cfg.example
.       endif
.   endfor
.   for project.bin
debian/tmp/usr/bin/$(bin.name)
.   endfor
.# generate service file names
.   for project.main where main.service ?= 1 | main.services ?= 1
.       if main.no_config ?= 0
debian/tmp/etc/$(project.name)/$(main.name).cfg
.       endif
debian/tmp/usr/lib/systemd/system/$(main.name)*.service
.   endfor
.   for project.service
debian/tmp/lib/systemd/system/$(service.name)*.service
.   endfor

.for project.main where defined (main->extra)
.    for extra
debian/tmp$(extra.path)/$(extra.name)
.    endfor
.endfor

.endif

.if project.exports_classes
.   output ("packaging/debian/$(string.replace (project.libname, "_|-"))$(project->version.major).install")
debian/tmp/usr/lib/*/$(project.libname).so.*
.   output ("packaging/debian/$(string.replace (project.name, "_|-"))-dev.install")
debian/tmp/usr/include/*
debian/tmp/usr/lib/*/$(project.libname).so
debian/tmp/usr/lib/*/pkgconfig/$(project.libname).pc
.endif
.endmacro
